replicaCount: 1
image:
  repository: reezpatel/devpunk
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
# service:
#   type: ClusterIP
#   port: 80

job:
  name: "feed-ingestion"
  schedule: "0 */6 * * *"
  env: {}
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 1
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

persistentVolume:
  enabled: true

  ## Server data Persistent Volume access modes
  ## Must match those of existing PV or dynamic provisioner
  accessModes:
    - ReadWriteOnce

  ##  Server data Persistent Volume annotations
  annotations: {}

  ## If you'd like to bring your own PVC for persisting state, pass the name of the
  ## created + ready PVC here. If set, this Chart will not create the default PVC.
  ## Requires server.persistentVolume.enabled: true
  existingClaim: ""

  ## Server data Persistent Volume mount root path
  mountPath: /data

  ## Server data Persistent Volume size
  size: 8Gi

  ## Server data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  storageClass: ""

  ## Server data Persistent Volume Binding Mode
  ## If defined, volumeMode: <volumeMode>
  ## If empty (the default) or set to null, no volumeBindingMode spec is
  ## set, choosing the default mode.
  volumeMode: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

env:
  ##  REQUIRED: Set mongodb password
  MONGODB_PASSWORD: "password"
  ##  REQUIRED: Set mongodb username
  MONGODB_USERNAME: "user"
  ##  REQUIRED: Set mongodb database name
  MONGODB_DB_NAME: "db"
  ##  Set mongodb auth db, defaults to admin
  MONGODB_AUTH_DB: "admin"
  ##  Set mongodb hostname, defaults to localhost
  MONGODB_HOST: localhost
  ##  Set mongodb connection port, defaults to 27017
  MONGODB_PORT: "27017"
  ##  REQUIRED: Set path to store application data
  DATA_DIR: /data
  ##  REQUIRED: Ingress URL
  APPLICATION_URL: "http://example.com/"
  ##  REQUIRED: Github Client ID, for user auth
  GITHUB_LOGIN_CLIENT_ID: "cleint-id"
  ##  REQUIRED: Github Secret ID, for user auth
  GITHUB_LOGIN_CLIENT_SECRET: "client-secret"
  ##  Set Redis Host, defaults to localhost
  REDIS_HOST: localhost
  ##  Set Ingestion key used for cron job
  INGESTION_KEY: "super-secret-key"
